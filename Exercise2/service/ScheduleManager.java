package service;
import model.Task;import observer.TaskConflictObserver;import java.util.*;import java.util.logging.*;
public class ScheduleManager{private static ScheduleManager inst;private final Map<String,Task> tasks=new HashMap<>();private final List<TaskConflictObserver> obs=new ArrayList<>();private static final Logger LOG=Logger.getLogger(ScheduleManager.class.getName());private ScheduleManager(){}public static synchronized ScheduleManager getInstance(){if(inst==null)inst=new ScheduleManager();return inst;}public void addObserver(TaskConflictObserver o){obs.add(o);}public boolean addTask(Task t){for(Task ex:tasks.values()){if(t.overlaps(ex)){for(TaskConflictObserver o:obs)o.onConflict(t,ex);return false;}}tasks.put(t.getId(),t);LOG.info("Task added: "+t);return true;}public boolean removeTask(String id){return tasks.remove(id)!=null;}public List<Task> listSorted(){ArrayList<Task> l=new ArrayList<>(tasks.values());l.sort(Comparator.comparing(Task::getStart));return l;}public Optional<Task> findByDesc(String d){return tasks.values().stream().filter(t->t.getDescription().equalsIgnoreCase(d)).findFirst();}}
